//------------------------------------------------------------------------------------------------
//
//  ユーティリティ
//
//------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  Mixin - button
//--------------------------------------------------------------------------------------
@mixin button($padding, $bgColor, $radius, $blockFlag: false){
    @if $radius != 0 {
        @include border-radius($radius);
    }
    @if $bgColor != none{
        background-color: $bgColor;
    }
    @if $blockFlag != true{
        display: inline-block;
    }
    @if $blockFlag != 0px{
        padding: $padding;
    }
    line-height: 1;
}

//--------------------------------------------------------------------------------------
//  Mixin - CSSで作る矢印
//--------------------------------------------------------------------------------------
@mixin arrow($width: 20px, $height: 20px, $direction: up, $color: red){
    width: 0;
    height: 0;

    // Right
    @if $direction == "right"{
        border-top: $height/2 solid transparent;
        border-bottom: $height/2 solid transparent;
        border-left: $width solid $color;
    }

    // Left
    @if $direction == "left"{
        border-top: $height/2 solid transparent;
        border-bottom: $height/2 solid transparent;
        border-right: $width solid $color;
    }

    // Up
    @if $direction == "up"{
        border-left: $width/2 solid transparent;
        border-right: $width/2 solid transparent;
        border-bottom: $height solid $color;
    }

    // Down
    @if $direction == "down"{
        border-left: $width/2 solid transparent;
        border-right: $width/2 solid transparent;
        border-top: $height solid $color;
    }

}

//--------------------------------------------------------------------------------------
//  Mixin - placeholder
//--------------------------------------------------------------------------------------
@mixin placeholder{
    .is-placeholder             { @content }
    ::-webkit-input-placeholder { @content }
    :-moz-placeholder           { @content }
    ::-moz-placeholder          { @content }
    :-ms-input-placeholder      { @content }
}

//------------------------------------------------------------------------------------------------
//
//  Mixin - Sprites
//
//------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  Mixin - 背景を表示（widthとheightが指定され、ブロックサイズが変わるので注意）
//--------------------------------------------------------------------------------------
@mixin sprite-background($name, $hidpiFlag: false) {
    $ypos: 0;
    display: inline-block;
    background-image: $sprites-img;    
    background-repeat: no-repeat;
    overflow: hidden;
    @if ($hidpiFlag == true){
        width: image-width(sprite-file($sprites, $name)) / 2;
        height: image-height(sprite-file($sprites, $name)) / 2;
        $ypos: round(nth(sprite-position($sprites, $name), 2) / 2);
    }@else{
        width: image-width(sprite-file($sprites, $name));
        height: image-height(sprite-file($sprites, $name));
        $ypos: round(nth(sprite-position($sprites, $name), 2));
    }
    background-position: 0 $ypos;
}


//--------------------------------------------------------------------------------------
//  Mixin - sprite-backgroundをafterに突っ込む（親要素は自身を包括ブロックにしておく必要あり）
//--------------------------------------------------------------------------------------
@mixin sprite-after($name, $left, $top){
    &:after{
        content: " ";
        position: absolute;
        display: block;
        top: $top;
        left: $left;
        @include sprite-background($name);
    }
}